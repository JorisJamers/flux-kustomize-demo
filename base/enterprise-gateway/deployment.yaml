apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-gateway
  labels:
    gateway-selector: enterprise-gateway
    app: enterprise-gateway
    component: enterprise-gateway
spec:
# Uncomment/Update to deploy multiple replicas of EG
#  replicas: 1
  selector:
    matchLabels:
      gateway-selector: enterprise-gateway
  template:
    metadata:
      labels:
        gateway-selector: enterprise-gateway
        app: enterprise-gateway
        component: enterprise-gateway
    spec:
      # Created above.
      serviceAccountName: enterprise-gateway-sa
      containers:
      - env:
        - name: EG_PORT
          value: "8888"
        - name: EG_KERNEL_CLUSTER_ROLE
          value: "kernel-controller"
        - name: EG_SHARED_NAMESPACE
          value: "True"
        - name: EG_MIRROR_WORKING_DIRS
          value: "False"  
        - name: EG_CULL_IDLE_TIMEOUT
          value: "43200"
        - name: EG_LOG_LEVEL
          value: "DEBUG"
        - name: EG_KERNEL_LAUNCH_TIMEOUT
          value: "60"
        - name: EG_KERNEL_SESSION_PERSISTENCE
          value: "False"
        - name: EG_KERNEL_WHITELIST
          value: "['pytorch_plus','three_d_tools','reactions','h2oai','tf-rdkit','pytorch_plus_4','pytorch_plus_8','maciej_kernel']"
        image: elyra/enterprise-gateway:dev
        resources: 
          limits: 
            cpu: "250m" 
            memory: "2Gi"
            nvidia.com/gpu: "0"
        # Use IfNotPresent policy so that dev-based systems don't automatically
        # update. This provides more control.  Since formal tags will be release-specific
        # this policy should be sufficient for them as well.
        imagePullPolicy: IfNotPresent
        name: enterprise-gateway
        ports:
        - containerPort: 8888
## Uncomment to enable NFS-mounted kernelspecs
        volumeMounts:
        - name: kernelspecs
          mountPath: "/usr/local/share/jupyter/kernels"
        - name: dshm
          mountPath: /dev/shm
      volumes:
      - name: kernelspecs
        hostPath:
          path: /NAS/nfs/kernels
          type: Directory
        # nfs:
        #   server: 192.168.49.14
        #   path: "/kernels"
      - name: dshm
        emptyDir:
          medium: Memory